name: 'Build and push Docker image'
description: 'Builds a Docker image with Buildx and push`s it (optional) to a Docker registry'
author: 'Valispace'
branding:
  icon: 'anchor'
  color: 'orange'
inputs:
  save:
    description: 'Save is a shorthand for `--output=type=docker,dest=`'
    required: false
    default: 'false'
  archive:
    description: 'Docker image specification tarball name (must include `tar.gz` extension)'
    required: false
    default: '${{ github.event.repository.name }}-docker.tar.gz'
  push:
    description: 'Push is a shorthand for `--output=type=registry`'
    required: false
    default: 'false'
  registry:
    description: 'Server address of Docker registry (if not set it will default to GitHub Container Registry)'
    required: false
    default: 'ghcr.io'
  username:
    description: 'Username used to log against the Docker registry'
    required: false
    default: '${{ github.repository_owner }}'
  password:
    description: 'Password or personal access token used to log against the Docker registry'
    required: false
    default: '${{ github.token }}'
  logout:
    description: 'Log out from the Docker registry at the end of a job'
    required: false
    default: 'true'
  ecr:
    description: 'Specifies whether the given registry is ECR (`auto`, `true` or `false`)'
    required: false
    default: 'auto'
  context:
    description: 'Build`s context is the set of files located in the specified PATH or URL'
    required: false
    default: '.'
  dockerfile:
    description: 'Path to the Dockerfile'
    required: false
    default: ''
  labels:
    description: 'List of metadata for an image'
    required: false
    default: ''
  build-tags:
    description: 'List of tags to use on Docker image build'
    required: false
    default: ''
  push-tags:
    description: 'List of tags to use on Docker image push to Docker registry'
    required: false
    default: ''
  save-tags:
    description: 'List of tags to use on Docker image specification tarball creation'
    required: false
    default: ''
outputs:
  imageid:
    description: 'Image ID'
    value: '${{ steps.build-push.imageid }}'
  digest:
    description: 'Image digest'
    value: '${{ steps.build-push.digest }}'
  metadata:
    description: 'Build result metadata'
    value: '${{ steps.build-push.metadata }}'
runs:
  using: composite
  steps:
    - id: login
      if: ${{ (inputs.push == 'true') }}
      uses: docker/login-action@v2
      with:
        registry: '${{ inputs.registry }}'
        username: '${{ inputs.username }}'
        password: '${{ inputs.password }}'
        logout: ${{ inputs.logout }}
        ecr: '${{ inputs.ecr }}'
    - id: setup
      uses: docker/setup-buildx-action@v2
      with:
        driver: 'docker-container'
        install: true
    - id: build
      uses: docker/build-push-action@v3
      with:
        context: '${{ inputs.context }}'
        file: '${{ inputs.dockerfile }}'
        outputs: 'type=docker'
        labels: ${{ inputs.labels }}
        tags: ${{ inputs.build-tags }}
    - id: save
      if: ${{ (inputs.save == 'true') }}
      uses: docker/build-push-action@v3
      with:
        context: '${{ inputs.context }}'
        file: '${{ inputs.dockerfile }}'
        outputs: 'type=docker,dest=${{ inputs.archive }}'
        labels: ${{ inputs.labels }}
        tags: ${{ inputs.save-tags }}
    - id: push
      if: ${{ (inputs.push == 'true') }}
      uses: docker/build-push-action@v3
      with:
        context: '${{ inputs.context }}'
        file: '${{ inputs.dockerfile }}'
        outputs: 'type=registry'
        labels: ${{ inputs.labels }}
        tags: ${{ inputs.push-tags }}
