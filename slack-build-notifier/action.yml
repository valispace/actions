name: 'Build Notifier'
description: 'Send build notifications for a Github Action executed'

inputs:
  slack-webhook-url:
    description: 'Slack Webhook URL to send build notifications'
    required: true
    default: ''
  slack-channel:
    description: 'The channel to send the notification to'
    required: false
    default: ''
  job-status:
    description: 'The status of the job'
    required: true
    default: ''
  notification-type:
    description: 'The type of notification'
    required: true
    default: 'build'
  app-version:
    description: 'The version of the application'
    required: true
    default: ''
  github-server-url:
    description: 'Github server URL'
    required: true
    default: ''
  github-owner:
    description: 'Github owner'
    required: true
    default: ''
  github-repo:
    description: 'Github repository'
    required: true
    default: ''
  github-branch:
    description: 'The branch of the repository'
    required: true
    default: ''
  github-trigger:
    description: 'The trigger of the build'
    required: true
    default: ''
  github-sha:
    description: 'The commit SHA'
    required: true
    default: ''
  github-run-id:
    description: 'The run ID of the job'
    required: true
    default: ''
  github-workflow:
    description: 'The workflow name'
    required: true
    default: ''
  github-ref-name:
    description: 'The ref name'
    required: true
    default: ''
  message:
    description: 'The message to send'
    required: false
    default: ''
  fields:
    description: 'The fields to send'
    required: false
    default: ''

runs:
  using: composite
  steps:

    - name: 'Define messages'
      id: define-messages
      if: ${{ inputs.notification-type == 'build' }}
      shell: bash
      run: |
        # Check if app-version is empty
        if [ -z "${{ inputs.app-version }}" ]; then
          # Generate message without version and set it to a variable to be access in the next step
          echo "::set-output name=success_text::[*SUCCESS*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }})>"
          echo "::set-output name=failure_text::[*FAILURE*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }})>"
          echo "::set-output name=cancelled_text::[*CANCELLED*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }})>"
        else
          # Generate message with version and set it to a variable to be access in the next step
          echo "::set-output name=success_text::[*SUCCESS*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }} - ${{ inputs.app-version }})>"
          echo "::set-output name=failure_text::[*FAILURE*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }} - ${{ inputs.app-version }})>"
          echo "::set-output name=cancelled_text::[*CANCELLED*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }} - ${{ inputs.app-version }})>"
        fi

    - name: 'Notify channel #${{ inputs.slack-channel }}'
      id: build-notify
      if: ${{ inputs.notification-type == 'build' }}
      uses: valispace/actions/simple-slack-notify@master
      with:
        webhook: '${{ inputs.slack-webhook-url }}'
        channel: '${{ inputs.slack-channel }}'
        status: '${{ inputs.job-status }}'
        success_text: "${{ steps.define-messages.outputs.success_text }}"
        failure_text: "${{ steps.define-messages.outputs.failure_text }}"
        cancelled_text: "${{ steps.define-messages.outputs.cancelled_text }}"
        fields: |
          [
            { "title": "Trigger", "value": "<${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/commit/${{ inputs.github-sha }}|${{ inputs.github-branch }}> - ${{ inputs.github-trigger }}", "short": false }
          ]
    
    - name: 'Notify channel #${{ inputs.slack-channel }}'
      id: simple-notify
      if: ${{ inputs.notification-type == 'simple' }}
      uses: valispace/actions/simple-slack-notify@master
      with:
        webhook: '${{ inputs.slack-webhook-url }}'
        channel: '${{ inputs.slack-channel }}'
        status: '${{ inputs.job-status}}'
        text:   '${{ inputs.message }}'

    - name: 'Notify channel #${{ inputs.slack-channel }}'
      id: e2e-notify
      if: ${{ inputs.notification-type == 'vali' }}
      uses: valispace/actions/simple-slack-notify@master
      with:
        wvebhook: '${{ inputs.slack-webhook-url }}'
        channel: '${{ inputs.slack-channel }}'
        status: '${{ inputs.job-status }}'
        success_text:   '  [*SUCCESS*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }})>'
        failure_text:   '  [*FAILURE*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }} (${{ inputs.github-repo }})>'
        cancelled_text: '[*CANCELLED*] <${{ inputs.github-server-url }}/${{ inputs.github-owner }}/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}|${{ github.workflow }} (${{ inputs.github-repo }})>'
        fields: |
            [
               { "title":       "Branch", "value": "<${{ github.server_url }}/${{ inputs.github-repo }}/tree/${{ inputs.ref-name }}|${{ inputs.github-branch }}>", "short": true }
              ,{ "title":      "Version", "value": "${{ github.app-version }}", "short": true }
            ]
