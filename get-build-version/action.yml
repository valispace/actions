name: 'Get build version'
description: 'Returns the current build version'
author: 'Valispace'
branding:
  icon: 'help-circle'
  color: 'orange'
inputs:
  versioning-file:
    description: 'Path to the versioning file'
    required: true
    default: ''
outputs:
  release:
    description: 'Current release version (e.g. `x.y`)'
    value: '${{ steps.release.outputs.value }}'
  version:
    description: 'Current build version (e.g. `x.y.z(-(alpha|release-candidate)-(epoch))?`)'
    value: '${{ steps.build.outputs.value }}'
  pre-release-type:
    description: 'Current pre-release type (if defined) (e.g. `alpha`, `release-candidate`, ``)'
    value: '${{ steps.pre-release-type.outputs.value }}'
  pre-release-metadata:
    description: 'Current pre-release metadata (if defined) (e.g. `alpha-1692107243`, `release-candidate-1692112160`, ``)'
    value: '${{ steps.pre-release-metadata.outputs.value }}'
runs:
  using: composite
  steps:
    - id: check-required-inputs
      run: |
        if [ "${{ inputs.versioning-file }}" == "" ]; then
          echo "ERROR: Path to the versioning file is required!" && exit 1
        fi
      shell: bash
    - id: release
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.versioning-file }}" | grep --only-matching --perl-regexp "(?P<major>(0|[1-9][0-9]*))\.(?P<minor>(0|[1-9][0-9]*))" )" )" >> $GITHUB_OUTPUT'
      shell: bash
    - id: build
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.versioning-file }}" | grep --only-matching --perl-regexp "(?P<major>(0|[1-9][0-9]*))\.(?P<minor>(0|[1-9][0-9]*))\.(?P<patch>(0|[1-9][0-9]*))(?:\-(?P<prerelease>(alpha|release-candidate)(?:\-(?P<buildmetadata>([0-9]{10,})))))?" )" )" >> $GITHUB_OUTPUT'
      shell: bash
    - id: pre-release-type
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.versioning-file }}" | grep --only-matching --perl-regexp "(?P<prerelease>(alpha|release-candidate))?" )" )" >> $GITHUB_OUTPUT'
      shell: bash
    - id: pre-release-metadata
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.versioning-file }}" | grep --only-matching --perl-regexp "(?P<prerelease>(alpha|release-candidate)(?:\-(?P<buildmetadata>([0-9]{10,}))))?" )" )" >> $GITHUB_OUTPUT'
      shell: bash
