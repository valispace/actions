name: 'Get build version'
description: 'Returns the current build version'
author: 'Valispace'
branding:
  icon: 'help-circle'
  color: 'orange'
inputs:
  file:
    description: 'Path to the versioning file'
    required: true
    default: ''
outputs:
  release:
    description: 'Current release version (e.g. `x.y`)'
    value: '${{ steps.release.outputs.value }}'
  version:
    description: 'Current build version (e.g. `x.y.z(-(alpha|release-candidate)-(epoch))?`)'
    value: '${{ steps.build.outputs.value }}'
  pre-release:
    description: 'Current pre-release type (if defined) (e.g. `alpha`, `release-candidate`, ``)'
    value: '${{ steps.pre-release.outputs.value }}'
  build-metadata:
    description: 'Current build metadata (if defined) (e.g. `1692107243`, ``)'
    value: '${{ steps.build-metadata.outputs.value }}'
runs:
  using: composite
  steps:
    - id: release
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.file }}" | grep --only-matching --perl-regexp "(?P<major>(0|[1-9][0-9]*))\.(?P<minor>(0|[1-9][0-9]*))" )" )" >> $GITHUB_OUTPUT'
      shell: bash
    - id: build
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.file }}" | grep --only-matching --perl-regexp "(?P<major>(0|[1-9][0-9]*))\.(?P<minor>(0|[1-9][0-9]*))\.(?P<patch>(0|[1-9][0-9]*))(?:\-(?P<prerelease>(alpha|release-candidate)(?:\-(?P<buildmetadata>([0-9]{10,})))))?" )" )" >> $GITHUB_OUTPUT'
      shell: bash
    - id: pre-release
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.file }}" | grep --only-matching --perl-regexp "(?P<prerelease>(alpha|release-candidate))?" )" )" >> $GITHUB_OUTPUT'
      shell: bash
    - id: build-metadata
      run: 'echo "value=$( echo "$( grep --extended-regexp "version" "${{ inputs.file }}" | grep --only-matching --perl-regexp "(?P<buildmetadata>([0-9]{10,}))?" )" )" >> $GITHUB_OUTPUT'
      shell: bash
